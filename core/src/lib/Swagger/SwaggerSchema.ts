import { SwaggerDefinition, SwaggerExternalDocs, SwaggerInfo, SwaggerMethod, SwaggerPath, SwaggerTag } from "./types";

export class SwaggerSchema {
  _openapi = '3.0.1';
  _info: SwaggerInfo = {
    description: 'API Documentation',
    version: '1.0.0',
    title: 'Autogenerated OpenAPI specs',
  }
  _tags: SwaggerTag[] = [];
  _externalDocs: SwaggerExternalDocs | null = null;
  _definitions: Record<string, SwaggerDefinition> = {};
  _paths: Record<string, Partial<Record<SwaggerMethod, SwaggerPath>>> = {};
  _servers = [
    { url: '/' }
  ];

  info(data: Partial<SwaggerInfo>) {
    this._info = { ...this._info, ...data };
    return this;
  }

  tag(data: SwaggerTag) {
    this._tags.push(data);
    return this;
  }

  externalDocs(data: SwaggerExternalDocs) {
    this._externalDocs = data;
    return this;
  }

  definition(name: string, definition: SwaggerDefinition) {
    this._definitions[name] = definition;
    return this;
  }

  path(route: string, method: SwaggerMethod, schema: SwaggerPath) {
    if (this._paths[route] === undefined) {
      this._paths[route] = {};
    }

    this._paths[route][method] = schema;
    return this;
  }
}
